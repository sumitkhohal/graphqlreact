{"version":3,"sources":["components/NavBar.js","gqloperations/queries.js","components/Profile.js","gqloperations/mutations.js","components/Login.js","components/SignUp.js","components/Home.js","components/CreateQuote.js","components/OtherUserProfile.js","components/NotFound.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","token","localStorage","getItem","navigate","useNavigate","React","createElement","className","Link","to","id","Fragment","onClick","removeItem","GET_ALL_QUOTES","gql","_templateObject","_taggedTemplateLiteral","GET_MY_PROFILE","_templateObject2","GET_USER_BY_ID","_templateObject3","Profile","_useQuery","useQuery","fetchPolicy","loading","error","data","console","log","message","src","concat","usr","firstName","alt","lastName","email","quotes","map","quote","name","SIGNUP_USER","LOGIN_USER","CREATE_QUOTE","Login","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useMutation","useMutation","_useMutation2","signinUser","_useMutation2$","setItem","user","handleChange","e","_objectSpread","_defineProperty","target","value","onSubmit","preventDefault","variables","userSignIn","type","placeholder","onChange","required","password","SignUp","signupUser","userNew","Home","length","by","_id","CreateQuote","setQuote","refetchQueries","createQuote","OtherUserProfile","userId","useParams","NotFound","width","height","frameBorder","class","allowFullScreen","routes","path","element","App","useRoutes","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","headers","authorization","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter","ApolloProvider"],"mappings":"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","file":"static/js/main.e056452d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nconst NavBar = () => {\n  const token = localStorage.getItem(\"token\");\n  const navigate = useNavigate();\n  return (\n    <nav>\n      <div className=\"nav-wrapper #673ab7 deep-purple\">\n        <Link to=\"/\" className=\"brand-logo left\">\n          Quote App\n        </Link>\n        <ul id=\"nav-mobile\" className=\"right\">\n          {token ? (\n            <>\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n              <li>\n                <button\n                  className=\"red btn\"\n                  onClick={() => {\n                    localStorage.removeItem(\"token\");\n                    navigate(\"/login\");\n                  }}\n                >\n                  Logout\n                </button>\n              </li>\n            </>\n          ) : (\n            <>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/signup\">SignUp</Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { gql } from \"@apollo/client\";\nexport const GET_ALL_QUOTES = gql`\n  query getAllQuotes {\n    quotes {\n      name\n      by {\n        _id\n        firstName\n      }\n    }\n  }\n`;\n\nexport const GET_MY_PROFILE = gql`\n  query getMyProfile {\n    usr: myprofile {\n      firstName\n      lastName\n      email\n      quotes {\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_USER_BY_ID = gql`\n  query getUserById($userId: ID!) {\n    user(_id: $userId) {\n      _id\n      firstName\n      lastName\n      email\n      quotes {\n        name\n      }\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GET_MY_PROFILE } from \"../gqloperations/queries\";\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const { loading, error, data } = useQuery(GET_MY_PROFILE, {\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  if (!localStorage.getItem(\"token\")) {\n    navigate(\"/login\");\n  }\n\n  if (loading) return <h1>Profile is Loading</h1>;\n  if (error) {\n    console.log(error.message);\n  }\n  if (data) {\n    console.log(data, \"wefwef\");\n  }\n  return (\n    <div className=\"container my-container\">\n      <div className=\"center-align\">\n        <img\n          className=\"circle profileImg\"\n          src={`https://robohash.org/${data.usr.firstName}.png?size=200x200`}\n          alt=\"pic\"\n        />\n        <h5>\n          {data.usr.firstName} {data.usr.lastName}\n        </h5>\n        <h6>Email - {data.usr.email}</h6>\n      </div>\n      <h3>Your Quotes</h3>\n      {data.usr.quotes.map((quote) => {\n        return (\n          <blockquote>\n            <h6>{quote.name}</h6>\n          </blockquote>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Profile;\n","import { gql } from \"@apollo/client\";\nexport const SIGNUP_USER = gql`\n  mutation createUser($userNew: UserInput!) {\n    user: signUpUser(userNew: $userNew) {\n      firstName\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation SignInUser($userSignIn: UserSignInInput!) {\n    user: signInUser(userSignIn: $userSignIn) {\n      token\n    }\n  }\n`;\n\nexport const CREATE_QUOTE = gql`\n  mutation createQuote($name: String!) {\n    quote: createQuote(name: $name)\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { LOGIN_USER } from \"../gqloperations/mutations\";\n\nconst Login = () => {\n  const [formData, setFormData] = useState({});\n  const navigate = useNavigate();\n\n  const [signinUser, { loading, error, data }] = useMutation(\n    LOGIN_USER\n    //   , {\n    //   onCompleted(data) {\n    //     localStorage.setItem(\"token\", data.user.token);\n    //     navigate(\"/\");\n    //   },\n    // }\n  );\n\n  if (loading) return <h1>Loading</h1>;\n\n  if (data) {\n    localStorage.setItem(\"token\", data.user.token);\n    navigate(\"/\");\n  }\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    signinUser({\n      variables: {\n        userSignIn: formData,\n      },\n    });\n  };\n\n  return (\n    <div className=\"container my-container\">\n      {error && <div className=\"red card-panel\">{error.message}</div>}\n\n      <h5>LOGIN</h5>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={formData.email}\n          name=\"email\"\n          onChange={handleChange}\n          required\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={formData.password}\n          name=\"password\"\n          onChange={handleChange}\n          required\n        />\n        <Link to=\"/signup\">\n          <p>Don't have an account?</p>\n        </Link>\n        <button\n          className=\"btn #673ab7 deep-purple\n\"\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SIGNUP_USER } from \"../gqloperations/mutations\";\n\nconst SignUp = () => {\n  const [formData, setFormData] = useState({});\n  const [signupUser, { data, loading, error }] = useMutation(SIGNUP_USER);\n\n  if (loading) return <h1>Loading</h1>;\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signupUser({\n      variables: {\n        userNew: formData,\n      },\n    });\n  };\n\n  return (\n    <div className=\"container my-container\">\n      {error && <div className=\"red card-panel\">{error.message}</div>}\n\n      {data && data.user && (\n        <div className=\"green card-panel\">\n          {data.user.firstName} is SignedUp. Your can login now!\n        </div>\n      )}\n      <h5>SignUp</h5>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={formData.firstName}\n          name=\"firstName\"\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={formData.lastName}\n          name=\"lastName\"\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          value={formData.email}\n          name=\"email\"\n          onChange={handleChange}\n          required\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={formData.password}\n          name=\"password\"\n          onChange={handleChange}\n          required\n        />\n        <Link to=\"/login\">\n          <p>Already have an account?</p>\n        </Link>\n        <button className=\"btn #673ab7 deep-purple\" type=\"submit\">\n          SignUp\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GET_ALL_QUOTES } from \"../gqloperations/queries\";\n\nconst Home = () => {\n  const { loading, error, data } = useQuery(GET_ALL_QUOTES, {\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  if (loading) return <h1>Loading</h1>;\n  if (error) {\n    console.log(error.message);\n  }\n  if (data.quotes.length == 0) {\n    return <h1>No quotes are available</h1>;\n  }\n  return (\n    <div className=\"container\">\n      {data.quotes.map((quote) => {\n        return (\n          <blockquote>\n            <h6>{quote.name}</h6>\n            <Link to={`/profile/${quote.by._id}`}>\n              <p className=\"right-align\">~{quote.by.firstName}</p>\n            </Link>\n          </blockquote>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { CREATE_QUOTE } from \"../gqloperations/mutations\";\nimport { GET_ALL_QUOTES } from \"../gqloperations/queries\";\n\nconst CreateQuote = () => {\n  const [quote, setQuote] = useState(\"\");\n\n  const [createQuote, { loading, error, data }] = useMutation(CREATE_QUOTE, {\n    refetchQueries: [\"getAllQuotes\", \"getMyProfile\"],\n  });\n\n  if (loading) return <h1>Loading</h1>;\n\n  if (error) {\n    console.log(error.message);\n  }\n\n  if (data) {\n    console.log(data);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createQuote({\n      variables: {\n        name: quote,\n      },\n    });\n  };\n\n  return (\n    <div className=\"container my-container\">\n      {error && <div className=\"red card-panel\">{error.message}</div>}\n      {data && <div className=\"green card-panel\">{data.quote}</div>}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={quote}\n          onChange={(e) => setQuote(e.target.value)}\n          placeholder=\"Write your quote here\"\n        />\n        <button className=\"btn green\" type=\"submit\">\n          create\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateQuote;\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GET_USER_BY_ID } from \"../gqloperations/queries\";\n\nconst OtherUserProfile = () => {\n  const { userId } = useParams();\n  console.log(userId);\n  const { loading, error, data } = useQuery(GET_USER_BY_ID, {\n    variables: { userId },\n  });\n\n  if (loading) return <h1>Profile is Loading</h1>;\n  if (error) {\n    console.log(error.message);\n  }\n  if (data) {\n    console.log(data, \"wefwef\");\n  }\n  return (\n    <div className=\"container my-container\">\n      <div className=\"center-align\">\n        <img\n          className=\"circle profileImg\"\n          src={`https://robohash.org/${data.user.firstName}.png?size=200x200`}\n          alt=\"pic\"\n        />\n        <h5>\n          {data.user.firstName} {data.user.lastName}\n        </h5>\n        <h6>Email - {data.user.email}</h6>\n      </div>\n      <h3>Your Quotes</h3>\n      {data.user.quotes.map((quote) => {\n        return (\n          <blockquote>\n            <h6>{quote.name}</h6>\n          </blockquote>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OtherUserProfile;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"center\">\n      <h1>Page Not Found</h1>\n      <iframe\n        src=\"https://giphy.com/embed/C21GGDOpKT6Z4VuXyn\"\n        width=\"480\"\n        height=\"480\"\n        frameBorder=\"0\"\n        class=\"giphy-embed\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import Profile from \"./components/Profile\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Home from \"./components/Home\";\nimport CreateQuote from \"./components/CreateQuote\";\nimport React from \"react\";\nimport OtherUserProfile from \"./components/OtherUserProfile\";\nimport NotFound from \"./components/NotFound\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    element: <Home />,\n  },\n  {\n    path: \"/create\",\n    element: <CreateQuote />,\n  },\n  {\n    path: \"/login\",\n    element: <Login />,\n  },\n  {\n    path: \"/signup\",\n    element: <SignUp />,\n  },\n  {\n    path: \"/profile\",\n    element: <Profile />,\n  },\n  {\n    path: \"/profile/:userId\",\n    element: <OtherUserProfile />,\n  },\n  {\n    path: \"*\",\n    element: <NotFound />,\n  },\n];\n","import \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport { routes } from \"./routes\";\nimport { useRoutes } from \"react-router-dom\";\nimport React from \"react\";\nfunction App() {\n  const element = useRoutes(routes);\n  return (\n    <div>\n      <NavBar />\n      {element}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  useQuery,\n  ApolloProvider,\n  gql,\n} from \"@apollo/client\";\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n  headers: {\n    authorization: localStorage.getItem(\"token\") || \"\",\n  },\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}